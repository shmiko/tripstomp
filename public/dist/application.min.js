"use strict";var ApplicationConfiguration=function(){var applicationModuleName="tripstomp",applicationModuleVendorDependencies=["ngResource","ngCookies","ngAnimate","ngTouch","ngSanitize","ui.router","ui.bootstrap","ui.utils"],registerModule=function(moduleName,dependencies){angular.module(moduleName,dependencies||[]),angular.module(applicationModuleName).requires.push(moduleName)};return{applicationModuleName:applicationModuleName,applicationModuleVendorDependencies:applicationModuleVendorDependencies,registerModule:registerModule}}();angular.module(ApplicationConfiguration.applicationModuleName,ApplicationConfiguration.applicationModuleVendorDependencies),angular.module(ApplicationConfiguration.applicationModuleName).config(["$locationProvider",function($locationProvider){$locationProvider.hashPrefix("!")}]),angular.element(document).ready(function(){"#_=_"===window.location.hash&&(window.location.hash="#!"),angular.bootstrap(document,[ApplicationConfiguration.applicationModuleName])}),ApplicationConfiguration.registerModule("businesses"),ApplicationConfiguration.registerModule("calendars"),ApplicationConfiguration.registerModule("core"),ApplicationConfiguration.registerModule("customers"),ApplicationConfiguration.registerModule("maps"),ApplicationConfiguration.registerModule("trips"),ApplicationConfiguration.registerModule("users"),angular.module("businesses").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Businesses","businesses","dropdown","/businesses(/create)?"),Menus.addSubMenuItem("topbar","businesses","List Businesses","businesses"),Menus.addSubMenuItem("topbar","businesses","New Business","businesses/create")}]),angular.module("businesses").config(["$stateProvider",function($stateProvider){$stateProvider.state("listBusinesses",{url:"/businesses",templateUrl:"modules/businesses/views/list-businesses.client.view.html"}).state("createBusiness",{url:"/businesses/create",templateUrl:"modules/businesses/views/create-business.client.view.html"}).state("viewBusiness",{url:"/businesses/:businessId",templateUrl:"modules/businesses/views/view-business.client.view.html"}).state("editBusiness",{url:"/businesses/:businessId/edit",templateUrl:"modules/businesses/views/edit-business.client.view.html"})}]),angular.module("businesses").controller("BusinessesController",["$scope","$stateParams","$location","Authentication","Businesses",function($scope,$stateParams,$location,Authentication,Businesses){$scope.authentication=Authentication,$scope.create=function(){var business=new Businesses({name:this.name});business.$save(function(response){$location.path("businesses/"+response._id),$scope.name=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(business){if(business){business.$remove();for(var i in $scope.businesses)$scope.businesses[i]===business&&$scope.businesses.splice(i,1)}else $scope.business.$remove(function(){$location.path("businesses")})},$scope.update=function(){var business=$scope.business;business.$update(function(){$location.path("businesses/"+business._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.businesses=Businesses.query()},$scope.findOne=function(){$scope.business=Businesses.get({businessId:$stateParams.businessId})}}]),angular.module("businesses").factory("Businesses",["$resource",function($resource){return $resource("businesses/:businessId",{businessId:"@_id"},{update:{method:"PUT"}})}]),angular.module("calendars").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Calendars","calendars","dropdown","/calendars(/create)?"),Menus.addSubMenuItem("topbar","calendars","List Calendars","calendars"),Menus.addSubMenuItem("topbar","calendars","New Calendar","calendars/create")}]),angular.module("calendars").config(["$stateProvider",function($stateProvider){$stateProvider.state("listCalendars",{url:"/calendars",templateUrl:"modules/calendars/views/list-calendars.client.view.html"}).state("createCalendar",{url:"/calendars/create",templateUrl:"modules/calendars/views/create-calendar.client.view.html"}).state("viewCalendar",{url:"/calendars/:calendarId",templateUrl:"modules/calendars/views/view-calendar.client.view.html"}).state("editCalendar",{url:"/calendars/:calendarId/edit",templateUrl:"modules/calendars/views/edit-calendar.client.view.html"})}]),angular.module("calendars").controller("CalendarsController",["$scope","$stateParams","$location","Authentication","Calendars",function($scope,$stateParams,$location,Authentication,Calendars){$scope.authentication=Authentication,$scope.create=function(){var calendar=new Calendars({name:this.name,event_desc:this.name,location:this.name,event_type:this.name});calendar.$save(function(response){$location.path("calendars/"+response._id),$scope.name="",$scope.event_desc="",$scope.location="",$scope.event_type=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(calendar){if(calendar){calendar.$remove();for(var i in $scope.calendars)$scope.calendars[i]===calendar&&$scope.calendars.splice(i,1)}else $scope.calendar.$remove(function(){$location.path("calendars")})},$scope.update=function(){var calendar=$scope.calendar;calendar.$update(function(){$location.path("calendars/"+calendar._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.calendars=Calendars.query()},$scope.findOne=function(){$scope.calendar=Calendars.get({calendarId:$stateParams.calendarId})}}]),angular.module("calendars").factory("Calendars",["$resource",function($resource){return $resource("calendars/:calendarId",{calendarId:"@_id"},{update:{method:"PUT"}})}]),angular.module("core").config(["$stateProvider","$urlRouterProvider",function($stateProvider,$urlRouterProvider){$urlRouterProvider.otherwise("/"),$stateProvider.state("home",{url:"/",templateUrl:"modules/core/views/home.client.view.html"})}]),angular.module("core").controller("HeaderController",["$scope","Authentication","Menus",function($scope,Authentication,Menus){$scope.authentication=Authentication,$scope.isCollapsed=!1,$scope.menu=Menus.getMenu("topbar"),$scope.toggleCollapsibleMenu=function(){$scope.isCollapsed=!$scope.isCollapsed},$scope.$on("$stateChangeSuccess",function(){$scope.isCollapsed=!1})}]),angular.module("core").controller("HomeController",["$scope","Authentication",function($scope,Authentication){$scope.authentication=Authentication,$scope.alerts=[{icon:"glyphicon-globe",colour:"btn-danger",text:"1st Map",description:"MAP"},{icon:"glyphicon-calendar",colour:"btn-warning",text:"1st Calendar",description:"CALENDAR"},{icon:"glyphicon-road",colour:"btn-success",text:"1st Trip",description:"TRIP"},{icon:"glyphicon-globe",colour:"btn-info",text:"2nd Trip",description:"TRIP"},{icon:"glyphicon-globe",colour:"btn-primary",text:"3rd Trip",description:"TRIP"},{icon:"glyphicon-globe",colour:"btn-info",text:"4th Trip",description:"TRIP"}]}]),angular.module("core").service("Menus",[function(){this.defaultRoles=["*"],this.menus={};var shouldRender=function(user){if(!user)return this.isPublic;if(~this.roles.indexOf("*"))return!0;for(var userRoleIndex in user.roles)for(var roleIndex in this.roles)if(this.roles[roleIndex]===user.roles[userRoleIndex])return!0;return!1};this.validateMenuExistance=function(menuId){if(menuId&&menuId.length){if(this.menus[menuId])return!0;throw new Error("Menu does not exists")}throw new Error("MenuId was not provided")},this.getMenu=function(menuId){return this.validateMenuExistance(menuId),this.menus[menuId]},this.addMenu=function(menuId,isPublic,roles){return this.menus[menuId]={isPublic:isPublic||!1,roles:roles||this.defaultRoles,items:[],shouldRender:shouldRender},this.menus[menuId]},this.removeMenu=function(menuId){this.validateMenuExistance(menuId),delete this.menus[menuId]},this.addMenuItem=function(menuId,menuItemTitle,menuItemURL,menuItemType,menuItemUIRoute,isPublic,roles,position){return this.validateMenuExistance(menuId),this.menus[menuId].items.push({title:menuItemTitle,link:menuItemURL,menuItemType:menuItemType||"item",menuItemClass:menuItemType,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.menus[menuId].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.menus[menuId].roles:roles,position:position||0,items:[],shouldRender:shouldRender}),this.menus[menuId]},this.addSubMenuItem=function(menuId,rootMenuItemURL,menuItemTitle,menuItemURL,menuItemUIRoute,isPublic,roles,position){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===rootMenuItemURL&&this.menus[menuId].items[itemIndex].items.push({title:menuItemTitle,link:menuItemURL,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.menus[menuId].items[itemIndex].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.menus[menuId].items[itemIndex].roles:roles,position:position||0,shouldRender:shouldRender});return this.menus[menuId]},this.removeMenuItem=function(menuId,menuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===menuItemURL&&this.menus[menuId].items.splice(itemIndex,1);return this.menus[menuId]},this.removeSubMenuItem=function(menuId,submenuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)for(var subitemIndex in this.menus[menuId].items[itemIndex].items)this.menus[menuId].items[itemIndex].items[subitemIndex].link===submenuItemURL&&this.menus[menuId].items[itemIndex].items.splice(subitemIndex,1);return this.menus[menuId]},this.addMenu("topbar")}]),angular.module("customers").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Customers","customers","dropdown","/customers(/create)?"),Menus.addSubMenuItem("topbar","customers","List Customers","customers"),Menus.addSubMenuItem("topbar","customers","New Customer","customers/create")}]),angular.module("customers").config(["$stateProvider",function($stateProvider){$stateProvider.state("listCustomers",{url:"/customers",templateUrl:"modules/customers/views/list-customers.client.view.html"})}]);var tripstompApp=angular.module("customers");tripstompApp.controller("CustomersController",["$scope","$stateParams","$location","Authentication","Customers","$modal","$log",function($scope,$stateParams,$location,Authentication,Customers,$modal,$log){this.authentication=Authentication,this.customers=Customers.query(),this.modalCreate=function(size){var modalInstance=$modal.open({templateUrl:"modules/customers/views/create-customer.client.view.html",controller:["$scope","$modalInstance",function($scope,$modalInstance){$scope.ok=function(){$modalInstance.close()},$scope.cancel=function(){$modalInstance.dismiss("cancel")}}],size:size});modalInstance.result.then(function(){},function(){$log.info("Modal dismissed at: "+new Date)})},this.modalUpdate=function(size,selectedCustomer){var modalInstance=$modal.open({templateUrl:"modules/customers/views/edit-customer.client.view.html",controller:["$scope","$modalInstance","customer",function($scope,$modalInstance,customer){$scope.customer=customer,$scope.ok=function(){updateCustomerForm.$valid&&$modalInstance.close($scope.customerId)},$scope.cancel=function(){$modalInstance.dismiss("cancel")}}],size:size,resolve:{customer:function(){return selectedCustomer}}});modalInstance.result.then(function(selectedItem){$scope.selected=selectedItem},function(){$log.info("Modal dismissed at: "+new Date)})},this.remove=function(customer){if(customer){customer.$remove();for(var i in this.customers)this.customers[i]===customer&&this.customers.splice(i,1)}else this.customer.$remove(function(){})}}]),tripstompApp.controller("CustomersCreateController",["$scope","Customers","Notify",function($scope,Customers,Notify){this.create=function(){var customer=new Customers({firstName:this.firstName,surname:this.surname,street1:this.street1,street2:this.street2,suburb:this.suburb,postcode:this.postcode,state:this.state,country:this.country,industry:this.industry,email:this.email,phone:this.phone,referred:this.referred,channel:this.channel,type:this.type});customer.$save(function(response){Notify.sendMsg("NewCustomer",{id:response._id})},function(errorResponse){$scope.error=errorResponse.data.message})}}]),tripstompApp.controller("CustomersUpdateController",["$scope","Customers",function($scope){$scope.channelOptions=[{id:1,choice:"Facebook"},{id:2,choice:"Twitter"},{id:3,choice:"Email"}],this.update=function(updatedCustomer){var customer=updatedCustomer;customer.$update(function(){},function(errorResponse){$scope.error=errorResponse.data.message})}}]),tripstompApp.directive("customerList",["Customers","Notify",function(Customers,Notify){return{restrict:"E",transclude:!0,templateUrl:"modules/customers/views/customer-list-template.html",link:function(scope){Notify.getMsg("NewCustomer",function(){scope.customersCtrl.customers=Customers.query()})}}}]),angular.module("customers").factory("Customers",["$resource",function($resource){return $resource("customers/:customerId",{customerId:"@_id"},{update:{method:"PUT"}})}]).factory("Notify",["$rootScope",function($rootScope){var notify={};return notify.sendMsg=function(msg,data){data=data||{},$rootScope.$emit(msg,data),console.log("Message sent!")},notify.getMsg=function(msg,func,scope){var unbind=$rootScope.$on(msg,func);scope&&scope.$on("destroy",unbind)},notify}]),angular.module("maps").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Maps","maps","dropdown","/maps(/create)?"),Menus.addSubMenuItem("topbar","maps","List Maps","maps"),Menus.addSubMenuItem("topbar","maps","New Map","maps/create")}]),angular.module("maps").config(["$stateProvider",function($stateProvider){$stateProvider.state("listMaps",{url:"/maps",templateUrl:"modules/maps/views/list-maps.client.view.html"}).state("createMap",{url:"/maps/create",templateUrl:"modules/maps/views/create-map.client.view.html"}).state("viewMap",{url:"/maps/:mapId",templateUrl:"modules/maps/views/view-map.client.view.html"}).state("editMap",{url:"/maps/:mapId/edit",templateUrl:"modules/maps/views/edit-map.client.view.html"})}]),angular.module("maps").controller("MapsController",["$scope","$stateParams","$location","Authentication","Maps",function($scope,$stateParams,$location,Authentication,Maps){$scope.authentication=Authentication,$scope.create=function(){var map=new Maps({name:this.name});map.$save(function(response){$location.path("maps/"+response._id),$scope.name=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(map){if(map){map.$remove();for(var i in $scope.maps)$scope.maps[i]===map&&$scope.maps.splice(i,1)}else $scope.map.$remove(function(){$location.path("maps")})},$scope.update=function(){var map=$scope.map;map.$update(function(){$location.path("maps/"+map._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.maps=Maps.query()},$scope.findOne=function(){$scope.map=Maps.get({mapId:$stateParams.mapId})}}]),angular.module("maps").factory("Maps",["$resource",function($resource){return $resource("maps/:mapId",{mapId:"@_id"},{update:{method:"PUT"}})}]),angular.module("trips").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Trips","trips","dropdown","/trips(/create)?"),Menus.addSubMenuItem("topbar","trips","List Trips","trips"),Menus.addSubMenuItem("topbar","trips","New Trip","trips/create")}]),angular.module("trips").config(["$stateProvider",function($stateProvider){$stateProvider.state("listTrips",{url:"/trips",templateUrl:"modules/trips/views/list-trips.client.view.html"}).state("createTrip",{url:"/trips/create",templateUrl:"modules/trips/views/create-trip.client.view.html"}).state("viewTrip",{url:"/trips/:tripId",templateUrl:"modules/trips/views/view-trip.client.view.html"}).state("editTrip",{url:"/trips/:tripId/edit",templateUrl:"modules/trips/views/edit-trip.client.view.html"})}]),angular.module("trips").controller("TripsController",["$scope","$stateParams","$location","Authentication","Trips",function($scope,$stateParams,$location,Authentication,Trips){$scope.authentication=Authentication,$scope.create=function(){var trip=new Trips({name:this.name});trip.$save(function(response){$location.path("trips/"+response._id),$scope.name=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(trip){if(trip){trip.$remove();for(var i in $scope.trips)$scope.trips[i]===trip&&$scope.trips.splice(i,1)}else $scope.trip.$remove(function(){$location.path("trips")})},$scope.update=function(){var trip=$scope.trip;trip.$update(function(){$location.path("trips/"+trip._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.trips=Trips.query()},$scope.findOne=function(){$scope.trip=Trips.get({tripId:$stateParams.tripId})}}]),angular.module("trips").factory("Trips",["$resource",function($resource){return $resource("trips/:tripId",{tripId:"@_id"},{update:{method:"PUT"}})}]),angular.module("users").config(["$httpProvider",function($httpProvider){$httpProvider.interceptors.push(["$q","$location","Authentication",function($q,$location,Authentication){return{responseError:function(rejection){switch(rejection.status){case 401:Authentication.user=null,$location.path("signin");break;case 403:}return $q.reject(rejection)}}}])}]),angular.module("users").config(["$stateProvider",function($stateProvider){$stateProvider.state("profile",{url:"/settings/profile",templateUrl:"modules/users/views/settings/edit-profile.client.view.html"}).state("password",{url:"/settings/password",templateUrl:"modules/users/views/settings/change-password.client.view.html"}).state("accounts",{url:"/settings/accounts",templateUrl:"modules/users/views/settings/social-accounts.client.view.html"}).state("signup",{url:"/signup",templateUrl:"modules/users/views/authentication/signup.client.view.html"}).state("signin",{url:"/signin",templateUrl:"modules/users/views/authentication/signin.client.view.html"}).state("forgot",{url:"/password/forgot",templateUrl:"modules/users/views/password/forgot-password.client.view.html"}).state("reset-invalid",{url:"/password/reset/invalid",templateUrl:"modules/users/views/password/reset-password-invalid.client.view.html"}).state("reset-success",{url:"/password/reset/success",templateUrl:"modules/users/views/password/reset-password-success.client.view.html"}).state("reset",{url:"/password/reset/:token",templateUrl:"modules/users/views/password/reset-password.client.view.html"})}]),angular.module("users").controller("AuthenticationController",["$scope","$http","$location","Authentication",function($scope,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.signup=function(){$http.post("/auth/signup",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/")}).error(function(response){$scope.error=response.message})},$scope.signin=function(){$http.post("/auth/signin",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/")}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("PasswordController",["$scope","$stateParams","$http","$location","Authentication",function($scope,$stateParams,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.askForPasswordReset=function(){$scope.success=$scope.error=null,$http.post("/auth/forgot",$scope.credentials).success(function(response){$scope.credentials=null,$scope.success=response.message}).error(function(response){$scope.credentials=null,$scope.error=response.message})},$scope.resetUserPassword=function(){$scope.success=$scope.error=null,$http.post("/auth/reset/"+$stateParams.token,$scope.passwordDetails).success(function(response){$scope.passwordDetails=null,Authentication.user=response,$location.path("/password/reset/success")}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("SettingsController",["$scope","$http","$location","Users","Authentication",function($scope,$http,$location,Users,Authentication){$scope.user=Authentication.user,$scope.user||$location.path("/"),$scope.hasConnectedAdditionalSocialAccounts=function(){for(var i in $scope.user.additionalProvidersData)return!0;return!1},$scope.isConnectedSocialAccount=function(provider){return $scope.user.provider===provider||$scope.user.additionalProvidersData&&$scope.user.additionalProvidersData[provider]},$scope.removeUserSocialAccount=function(provider){$scope.success=$scope.error=null,$http["delete"]("/users/accounts",{params:{provider:provider}}).success(function(response){$scope.success=!0,$scope.user=Authentication.user=response}).error(function(response){$scope.error=response.message})},$scope.updateUserProfile=function(isValid){if(isValid){$scope.success=$scope.error=null;var user=new Users($scope.user);user.$update(function(response){$scope.success=!0,Authentication.user=response},function(response){$scope.error=response.data.message})}else $scope.submitted=!0},$scope.changeUserPassword=function(){$scope.success=$scope.error=null,$http.post("/users/password",$scope.passwordDetails).success(function(){$scope.success=!0,$scope.passwordDetails=null}).error(function(response){$scope.error=response.message})}}]),angular.module("users").factory("Authentication",[function(){var _this=this;return _this._data={user:window.user},_this._data}]),angular.module("users").factory("Users",["$resource",function($resource){return $resource("users",{},{update:{method:"PUT"}})}]);